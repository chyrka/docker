#!/bin/bash

set -e

# VARIABLES
FTP_ADM_NAME=${FTP_ADM_NAME:-"admin"}
FTP_ADM_PASS=${FTP_ADM_PASS:-"passw0rd"}

DATE=$(date +%Y.%m.%d_%H.%M.%S_%N)

VSFTPD=/usr/sbin/vsftpd
VSFTPD_CONF=/etc/vsftpd/vsftpd.conf 
VSFTPD_WELCOME=/etc/vsftpd/vsftpd.welcome

VSFTPD_CERTIFICATE=/etc/vsftpd/vsftpd.pem
VSFTPD_CERTIFICATE_EXP=/etc/vsftpd/vsftpd.pkcs12

BDB_RAW=/etc/vsftpd/users_password
BDB=/etc/vsftpd/users_password.db

ROOT=$(grep -w ^local_root "${VSFTPD_CONF}" | cut -d= -f2)
NOPRIV_USER=$(grep -w ^nopriv_user "${VSFTPD_CONF}" | cut -d= -f2)
USER_CONFIG_DIR=$(grep -w ^user_config_dir "${VSFTPD_CONF}" | cut -d= -f2)
USERLIST_FILE=$(grep -w ^userlist_file "${VSFTPD_CONF}" | cut -d= -f2)
VSFTPD_LOG_FILE=$(grep -w ^vsftpd_log_file "${VSFTPD_CONF}" | cut -d= -f2)
LISTEN_PORT=$(grep -w ^listen_port "${VSFTPD_CONF}" | cut -d= -f2)

# SIGTERM handler
function _term() {

   echo "Stopping container."
   echo "SIGTERM received, shutting down the server!"
   kill -15 $childPID
   exit 0 # 128+15

}

# SIGKILL handler
function _kill() {

   echo "SIGKILL received, shutting down the server!"
   kill -9 $childPID
   # exit 137 # 128+9

}

# $1 = $FTP_USER_NAME
# $2 = $FTP_USER_DIR
# $3 = $FTP_USER_MOD
# $4 = $FTP_USER_CWD
function _config() {

    local FTP_USER_NAME=$1
    local FTP_USER_DIR=$2
    local FTP_USER_MOD=$3
    local FTP_USER_CWD=$4

    local ROOT_MOD=$(echo "${ROOT}/" | tr -s / | sed 's/\/:/:/g;s/:/\n/g')
    local FTP_USER_DIR_MOD=$(echo "${FTP_USER_DIR}/" | tr -s / | sed 's/\/:/:/g;s/:/\n/g')

    if [ ! -d "${USER_CONFIG_DIR}" ]; then mkdir -p "${USER_CONFIG_DIR}"; fi

    echo "${FTP_USER_DIR_MOD,,}" | grep -q "^${ROOT_MOD,,}"

    if [ $? -eq 0 ]; then

        echo "local_root=${FTP_USER_DIR_MOD}" > "${USER_CONFIG_DIR}/${FTP_USER_NAME}"
        if [ ! -d "${FTP_USER_DIR_MOD}" ]; then mkdir -p "${FTP_USER_DIR_MOD}"; chmod 0770 "${FTP_USER_DIR_MOD}"; chown ${NOPRIV_USER}:${NOPRIV_USER} "${FTP_USER_DIR_MOD}"; fi

        if [ "${FTP_USER_MOD,,}" == "rw" ]; then
            echo "write_enable=YES" >> "${USER_CONFIG_DIR}/${FTP_USER_NAME}"
        else
            echo "write_enable=NO" >> "${USER_CONFIG_DIR}/${FTP_USER_NAME}"
        fi

        if [ "${FTP_USER_CWD,,}" == "true" ]; then
            echo "cmds_denied=none" >> "${USER_CONFIG_DIR}/${FTP_USER_NAME}"
        else
            echo "cmds_denied=CWD" >> "${USER_CONFIG_DIR}/${FTP_USER_NAME}"
        fi

    fi

}

# Set SIGTERM handler
trap _term SIGTERM

# Set SIGKILL handler
trap _kill SIGKILL

cat "${VSFTPD_WELCOME}"

if [ -f "${BDB_RAW}" ]; then cp -fp "${BDB_RAW}" "${BDB_RAW}.${DATE}"; fi

if [ -f "${VSFTPD_LOG_FILE}" ]; then tar czf "${VSFTPD_LOG_FILE}.${DATE}.tgz" "${VSFTPD_LOG_FILE}" >/dev/null 2>&1; rm -f "${VSFTPD_LOG_FILE}"; fi
if [ ! -z "${VSFTPD_LOG_FILE}" ]; then mkdir -p "$(dirname "${VSFTPD_LOG_FILE}")"; fi

_config "${FTP_ADM_NAME}" "${ROOT}" "RW" "TRUE"
echo "${FTP_ADM_NAME}" > "${USERLIST_FILE}"
echo -e "${FTP_ADM_NAME}\n${FTP_ADM_PASS}" > "${BDB_RAW}"

while read -r user; do
    IFS=: read -r FTP_USER_NAME FTP_USER_PASS FTP_USER_DIR FTP_USER_MOD FTP_USER_CWD <<< "${!user}"
    if [ ! -z "${FTP_USER_NAME}" ] && [ ! -z "${FTP_USER_PASS}" ] && [ ! -z "${FTP_USER_DIR}" ] && [ ! -z "${FTP_USER_MOD}" ] && [ ! -z "${FTP_USER_CWD}" ]; then
        _config "${FTP_USER_NAME}" "${FTP_USER_DIR}" "${FTP_USER_MOD}" "${FTP_USER_CWD}"
        echo "${FTP_USER_NAME}" >> "${USERLIST_FILE}"
        echo -e "${FTP_USER_NAME}\n${FTP_USER_PASS}" >> "${BDB_RAW}"
    fi
done < <(env | grep "FTP_USER_" | sed 's/^\(FTP_USER_[a-zA-Z0-9]*\)=.*/\1/')

db_load -T -t hash -f "${BDB_RAW}" "${BDB}" # db_dump -p "${BDB}"

if [ ! -f "${VSFTPD_CERTIFICATE}" ]; then
    openssl req -x509 -nodes -days 36500 \
        -newkey rsa:2048 -keyout "${VSFTPD_CERTIFICATE}" -out "${VSFTPD_CERTIFICATE}" \
        -subj "/CN=FTP/C=RU/ST=MOSCOW/L=MOSCOW/O=COMPANY/OU=IT" >/dev/null 2>&1
    openssl pkcs12 -export -out "${VSFTPD_CERTIFICATE_EXP}" -in "${VSFTPD_CERTIFICATE}" -passout pass: >/dev/null 2>&1
fi

if [ ! -f "${BDB_RAW}" ]; then chmod 0600 "${BDB_RAW}"; fi
if [ ! -f "${BDB}" ]; then chmod 0600 "${BDB}"; fi
if [ ! -f "${VSFTPD_CERTIFICATE}" ]; then chmod 0600 "${VSFTPD_CERTIFICATE}"; fi
if [ ! -f "${VSFTPD_CERTIFICATE_EXP}" ]; then chmod 0600 "${VSFTPD_CERTIFICATE_EXP}"; fi

"${VSFTPD}" "${VSFTPD_CONF}" &
childPID=$!

while :; do
    nc -z localhost ${LISTEN_PORT}
    if [ $? -eq 0 ]; then
        echo -e "* listening on port ${LISTEN_PORT}\n"
        break
    fi
    sleep 1
done

if [ ! -f "${VSFTPD_LOG_FILE}" ]; then touch "${VSFTPD_LOG_FILE}"; fi

tail -n 0 -q -F "${VSFTPD_LOG_FILE}" >> /proc/1/fd/1 &
# ln -sf /proc/1/fd/1 "${VSFTPD_LOG_FILE}"

wait $childPID
