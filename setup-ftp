#!/bin/bash

set -e

# VARIABLES
FTP_ADM_NAME=${FTP_ADM_NAME:-"admin"}
FTP_ADM_PASS=${FTP_ADM_PASS:-"passw0rd"}

VSFTPD=/usr/sbin/vsftpd
VSFTPD_CONF=/etc/vsftpd/vsftpd.conf 
VSFTPD_WELCOME=/etc/vsftpd/vsftpd.welcome

BDB_RAW=/etc/vsftpd/users_password
BDB=/etc/vsftpd/users_password.db

ROOT=$(grep -w ^local_root "${VSFTPD_CONF}" | cut -d= -f2)
NOPRIV_USER=$(grep -w ^nopriv_user "${VSFTPD_CONF}" | cut -d= -f2)
USER_CONFIG_DIR=$(grep -w ^user_config_dir "${VSFTPD_CONF}" | cut -d= -f2)
USERLIST_FILE=$(grep -w ^userlist_file "${VSFTPD_CONF}" | cut -d= -f2)
XFERLOG_FILE=$(grep -w ^xferlog_file "${VSFTPD_CONF}" | cut -d= -f2)
VSFTPD_LOG_FILE=$(grep -w ^vsftpd_log_file "${VSFTPD_CONF}" | cut -d= -f2)
LISTEN_PORT=$(grep -w ^listen_port "${VSFTPD_CONF}" | cut -d= -f2)

# SIGTERM handler
function _term() {

   echo "Stopping container."
   echo "SIGTERM received, shutting down the server!"
   kill -15 $childPID
   exit 0 # 128+15

}

# SIGKILL handler
function _kill() {

   echo "SIGKILL received, shutting down the server!"
   kill -9 $childPID
   # exit 137 # 128+9

}

# $1 = $FTP_USER_NAME
# $2 = $FTP_USER_DIR
# $3 = $FTP_USER_MOD
# $4 = $FTP_USER_CWD
function _access() {

    if [ ! -d "${USER_CONFIG_DIR}" ]; then mkdir -p "${USER_CONFIG_DIR}"; fi
    if [ ! -z "${1}" ] && [ ! -z "${2}" ]; then
        echo -e "local_root=$2" > "${USER_CONFIG_DIR}/$1"
        if [ ! -d "${2}" ]; then mkdir -p "${2}"; chown ${NOPRIV_USER}:${NOPRIV_USER} "${2}"; fi
    fi
    if [ ! -z "${1}" ] && [ ! -z "${3}" ]; then
        if [ "${3,,}" == "ro" ]; then echo -e "write_enable=NO" >> "${USER_CONFIG_DIR}/$1"; fi
        if [ "${3,,}" == "rw" ]; then echo -e "write_enable=YES" >> "${USER_CONFIG_DIR}/$1"; fi
    fi
    if [ ! -z "${1}" ] && [ ! -z "${4}" ]; then
        if [ "${4,,}" == "false" ]; then echo -e "cmds_denied=CWD" >> "${USER_CONFIG_DIR}/$1"; fi
        if [ "${4,,}" == "true" ]; then echo -e "cmds_denied=none" >> "${USER_CONFIG_DIR}/$1"; fi
    fi

}

# Set SIGTERM handler
trap _term SIGTERM

# Set SIGKILL handler
trap _kill SIGKILL

cat "${VSFTPD_WELCOME}"

if [ -f "${BDB_RAW}" ]; then cp -fp "${BDB_RAW}" "${BDB_RAW}.$(date +%Y.%m.%d_%H.%M.%S_%N)"; fi
if [ -f "${USERLIST_FILE}" ]; then cp -fp "${USERLIST_FILE}" "${USERLIST_FILE}.$(date +%Y.%m.%d_%H.%M.%S_%N)"; fi

if [ -f "${XFERLOG_FILE}" ]; then tar czf "${XFERLOG_FILE}.$(date +%Y.%m.%d_%H.%M.%S_%N).tgz" "${XFERLOG_FILE}" >/dev/null 2>&1; rm -f "${XFERLOG_FILE}"; fi
if [ -f "${VSFTPD_LOG_FILE}" ]; then tar czf "${VSFTPD_LOG_FILE}.$(date +%Y.%m.%d_%H.%M.%S_%N).tgz" "${VSFTPD_LOG_FILE}" >/dev/null 2>&1; rm -f "${VSFTPD_LOG_FILE}"; fi

if [ ! -z "${XFERLOG_FILE}" ]; then mkdir -p "$(dirname "${XFERLOG_FILE}")"; fi
if [ ! -z "${VSFTPD_LOG_FILE}" ]; then mkdir -p "$(dirname "${VSFTPD_LOG_FILE}")"; fi

mkdir -p "${ROOT}"
chown ${NOPRIV_USER}:${NOPRIV_USER} "${ROOT}"

echo "${FTP_ADM_NAME}" > "${USERLIST_FILE}"
echo -e "${FTP_ADM_NAME}\n${FTP_ADM_PASS}" > "${BDB_RAW}"
_access "${FTP_ADM_NAME}" "${ROOT}" "RW" "TRUE"

while read -r user; do
    IFS=: read -r FTP_USER_NAME FTP_USER_PASS FTP_USER_DIR FTP_USER_MOD FTP_USER_CWD <<< "${!user}"
    if [ ! -z "${FTP_USER_NAME}" ] && [ ! -z "${FTP_USER_PASS}" ] && [ ! -z "${FTP_USER_DIR}" ] && [ ! -z "${FTP_USER_MOD}" ] && [ ! -z "${FTP_USER_CWD}" ]; then
        echo "${FTP_USER_NAME}" >> "${USERLIST_FILE}"
        echo -e "${FTP_USER_NAME}\n${FTP_USER_PASS}" >> "${BDB_RAW}"
        _access "${FTP_USER_NAME}" "${FTP_USER_DIR}" "${FTP_USER_MOD}" "${FTP_USER_CWD}"
    fi
done < <(env | grep "FTP_USER_" | sed 's/^\(FTP_USER_[a-zA-Z0-9]*\)=.*/\1/')

db_load -T -t hash -f "${BDB_RAW}" "${BDB}"
# db_dump -p "${BDB}"; rm -f "${BDB_RAW}"

"${VSFTPD}" "${VSFTPD_CONF}" &
childPID=$!

while :; do
    nc -z localhost ${LISTEN_PORT}
    if [ $? -eq 0 ]; then
        echo -e "* listening on port ${LISTEN_PORT}\n"
        break
    fi
    sleep 1
done

wait $childPID
